#!/usr/bin/env bash

echo "Initializing submodules"
git submodule init

# Get a list of all submodule paths defined in .gitmodules
SUBMODULE_PATHS=$(git config --file .gitmodules --get-regexp path | awk '{ print $2 }')

if [ -z "$SUBMODULE_PATHS" ]; then
	echo "No submodules found in .gitmodules"
	exit 0
fi

for path in $SUBMODULE_PATHS
do
	echo "Attempting update for: $path"
	# Try to update the specific submodule.
	# Use '||' to catch errors (like permission denied for private repos) and allow the script to continue.
	GIT_TERMINAL_PROMPT=0 git submodule update --init --remote --merge -- "$path" || echo "WARN: Failed to update $path. Skipping (might be private or unreachable)."
done

echo "Finished attempting submodule updates"
