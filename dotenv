#!/usr/bin/env bash
# adapted from https://github.com/ThePrimeagen/dev/blob/master/dev-env
dry_run="0"

if [ -z "$XDG_CONFIG_HOME" ]; then
    echo "no xdg config home"
    echo "using ~/.config" # useful in mac osx
    XDG_CONFIG_HOME=$HOME/.config
fi

# grab basepath of this script location
BASE_PATH=$(dirname $(realpath $0))

if [[ $1 == "--dry" ]]; then
    dry_run="1"
fi


log() {
    if [[ $dry_run == "1" ]]; then
        echo "[DRY_RUN]: $1"
    else
        echo "$1"
    fi
}

update_folders() {
    log "copying over files from: $1"
    pushd $1 &> /dev/null
    (
        configs=`find . -mindepth 1 -maxdepth 1 -type d`
        for c in $configs; do
            directory=${2%/}/${c#./}
            log "    removing: rm -rf $directory"

            if [[ $dry_run == "0" ]]; then
                rm -rf $directory
            fi

            log "    copying env: cp $c $2"
            if [[ $dry_run == "0" ]]; then
                cp -r ./$c $2
            fi
        done

    )
    popd &> /dev/null
}

update_files() {
    log "copying over files from: $1"
    log "    ensure target dir exists: mkdir -p $2"
    if [[ $dry_run == "0" ]]; then
        mkdir -p $2
    fi

    pushd $1 &> /dev/null
    (
        configs=`find . -mindepth 1 -maxdepth 1 -type f`
        for c in $configs; do
            file=${2%/}/${c#./}
            log "    removing: rm -f $file"
            if [[ $dry_run == "0" ]]; then
                rm $file
            fi

            log "    copying: cp $c $file"
            if [[ $dry_run == "0" ]]; then
                cp $c $file
            fi
        done

    )
    popd &> /dev/null
}

copy() {
    log "removing: $2"
    if [[ $dry_run == "0" ]]; then
        rm $2
    fi
    log "copying: $1 to $2"
    if [[ $dry_run == "0" ]]; then
        cp $1 $2
    fi
}

log "base_path: $BASE_PATH"

update_files $BASE_PATH/bin $HOME/.local/bin
update_files $BASE_PATH/dot $HOME
update_folders $BASE_PATH/config $XDG_CONFIG_HOME

copy $BASE_PATH/vim/.vimrc $HOME/.vimrc
